apply plugin: 'application'

sourceSets.main.resources.srcDirs += [ rootProject.file('assets').path ]
mainClassName = 'game.snake.lwjgl3.Lwjgl3Launcher'
eclipse.project.name = appName + '-lwjgl3'
sourceCompatibility = 8.0

dependencies {
	implementation project(':core')
	implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
	implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
	implementation "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

import org.gradle.internal.os.OperatingSystem

run {
	workingDir = rootProject.file('assets').path
	setIgnoreExitValue(true)
	
	if (OperatingSystem.current() == OperatingSystem.MAC_OS) {
		jvmArgs += "-XstartOnFirstThread"
	}
	test {
		useJUnitPlatform()
		testLogging {
			showStandardStreams = true
		}
	}
}

jar {
	archiveBaseName.set(appName)
	duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
	dependsOn configurations.runtimeClasspath
	from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
	exclude('META-INF/INDEX.LIST', 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA')
	dependencies {
		exclude('META-INF/INDEX.LIST', 'META-INF/maven/**')
	}
	manifest {
		attributes 'Main-Class': project.mainClassName
	}
	doLast {
		file(archiveFile).setExecutable(true, false)
	}
}
